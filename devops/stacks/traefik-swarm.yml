version: '3.9'

services:
  traefik:
    image: traefik:v2.10.4
    command:
      - --log.level=INFO
      - --log.filePath=/var/log/traefik/traefik.log
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode=true
      - --providers.docker.watch=true
      - --providers.docker.network=traefik-public
      - --api
      - --api.dashboard=true
      # DNS Resolver
      - --certificatesresolvers.mydnschallenge.acme.dnschallenge=true
      - --certificatesresolvers.mydnschallenge.acme.dnschallenge.provider=linodev4
      - --certificatesresolvers.mydnschallenge.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.mydnschallenge.acme.storage=/le/acme.json
      # Enable the access log, with HTTP requests
      - --accesslog.bufferingsize=100
      - --accesslog.filepath=/var/log/traefik/traefik-access.log
      # keep headers and user agents in logs
      - --accesslog.fields.defaultmode=keep
      - --accesslog.fields.names.ClientUsername=drop
      - --accesslog.fields.headers.defaultmode=keep
      - --accesslog.fields.headers.names.User-Agent=keep
      - --accesslog.fields.headers.names.Authorization=drop
      - --accesslog.fields.headers.names.Content-Type=keep
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    networks:
      - traefik-public
    environment:
      ACME_EMAIL: ${ACME_EMAIL}
      LINODE_TOKEN: ${LINODE_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Make sure the volume folder is created
      - ${HOME}/traefik/data/acme.json:/le/acme.json
      - ${HOME}/traefik/logs/:/var/log/traefik
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.type == traefikapp
      labels:
        # Dashboard
        - traefik.enable=true
        # Change the host url here
        - traefik.http.routers.traefik.rule=Host(`traefik.lillymountain.com`)
        - traefik.http.routers.traefik.service=api@internal
        - traefik.http.services.traefik.loadbalancer.server.port=8080
        - traefik.http.routers.traefik.tls=true
        - traefik.http.routers.traefik.tls.certresolver=mydnschallenge
        - traefik.http.routers.traefik.entrypoints=https
        - traefik.http.routers.traefik.middlewares=gzip,authtraefik
        ## Basic Authentication
        ### To create user:password pair, it's possible to use this command:
        ### echo $(htpasswd -nb user password) | sed -e s/\\$/\\$\\$/g
        ### Note: If using pw in yml, all dollar signs in the hash need to be doubled for escaping.
        ### Note: If using pw in env_vars, all dollar signs in the hash DO NOT need to be doubled for escaping.
        ### Defaults to admin:admin
        - traefik.http.middlewares.authtraefik.basicauth.users=admin:$$apr1$$uZPT5Fgu$$AmlIdamxT5ipBvPlsdfD70

        # global redirect to https
        - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
        - traefik.http.routers.http-catchall.entrypoints=http
        - traefik.http.routers.http-catchall.middlewares=redirect-to-https

        # middleware redirect
        - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

        # middleware compress
        - traefik.http.middlewares.gzip.compress=true

networks:
  traefik-public:
    external: true
